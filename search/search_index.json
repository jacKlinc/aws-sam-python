{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Homepage","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"#with-a-title","title":"With a title","text":"<p>``` py title=\"bubble_sort.py\" def bubble_sort(items):     for i in range(len(items)):         for j in range(len(items) - 1 - i):             if items[j] &gt; items[j + 1]:                 items[j], items[j + 1] = items[j + 1], items[j]</p> <pre><code>\n#### With line numbers\n\n``` py linenums=\"1\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"about/","title":"About","text":""},{"location":"reference/","title":"Reference","text":"<p>Sample pure Lambda function</p>"},{"location":"reference/#app.lambda_handler--parameters","title":"Parameters","text":"<p>event: dict, required     API Gateway Lambda Proxy Input Format</p> <pre><code>Event doc:\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format\n</code></pre> object, required <p>Lambda Context runtime methods and attributes</p> <p>Context doc: https://docs.aws.amazon.com/lambda/latest/dg/python-context-object.html</p>"},{"location":"reference/#app.lambda_handler--returns","title":"Returns","text":"<p>API Gateway Lambda Proxy Output Format: dict</p> <pre><code>Return doc:\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html\n</code></pre> Source code in <code>hello_world/app.py</code> <pre><code>def lambda_handler(event, _):\n    \"\"\"Sample pure Lambda function\n\n    Parameters\n    ----------\n    event: dict, required\n        API Gateway Lambda Proxy Input Format\n\n        Event doc:\n        https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format\n\n    context: object, required\n        Lambda Context runtime methods and attributes\n\n        Context doc: https://docs.aws.amazon.com/lambda/latest/dg/python-context-object.html\n\n    Returns\n    ------\n    API Gateway Lambda Proxy Output Format: dict\n\n        Return doc:\n        https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html\n    \"\"\"\n    return {\n        \"statusCode\": 200,\n        \"body\": json.dumps(\n            {\n                \"message\": \"hello world\",\n            }\n        ),\n    }\n</code></pre>"}]}