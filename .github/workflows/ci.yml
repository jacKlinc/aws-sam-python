name: CI Pipeline

on:
  push:
    branches:
      - "**" # Runs on push to any branch
  pull_request:
    branches:
      - main # Runs on pull requests targeting the main branch

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # Only run unit tests on push events
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Run unit tests
        run: |
          python -m pytest tests/unit
      
      - name: Run PyLint
        run: |
          pip install -r requirements-dev.txt
          pylint .  

  integration-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' # Only run integration tests on PR merges
    env:
      AWS_SAM_STACK_NAME: ${{ vars.AWS_SAM_STACK_NAME }}
      ENV: ${{ vars.ENV }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      - name: Deploy SAM application
        run: |
          sam deploy --stack-name ${{ vars.AWS_SAM_STACK_NAME }}-staging --no-confirm-changeset --capabilities CAPABILITY_IAM --config-env staging

      - name: Run integration tests
        run: |
          python -m pytest tests/integration

      - name: Teardown SAM application
        if: always()
        run: |
          sam delete --stack-name ${{ vars.AWS_SAM_STACK_NAME }}-staging --no-prompts

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Only deploy on push to main
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r hello_world/requirements.txt

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      - name: Deploy SAM application to Production
        run: |
          echo "Deploying stack ${{ vars.AWS_SAM_STACK_NAME }} to region ${{ vars.REGION }}"
          sam deploy --stack-name ${{ vars.AWS_SAM_STACK_NAME }}-prod --no-confirm-changeset --capabilities CAPABILITY_IAM --config-env prod

      - name: Notify deployment success
        run: |
          echo "Deployment of stack ${{ vars.AWS_SAM_STACK_NAME }} was successful!"
